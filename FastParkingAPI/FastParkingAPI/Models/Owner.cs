//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FastParkingAPI.Models
{
    using System;
    using System.Collections.Generic;
    
    public partial class Owner
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Owner()
        {
            this.OwnerCalculationTypes = new HashSet<OwnerCalculationType>();
            this.OwnerPaymentTypes = new HashSet<OwnerPaymentType>();
            this.Slots = new HashSet<Slot>();
        }
    
        public int Id { get; set; }
        public string FullName { get; set; }
        public string Address { get; set; }
        public Nullable<int> SlotsQuantity { get; set; }
        public Nullable<bool> isAvailable { get; set; }
        public string Ruc { get; set; }
        public Nullable<System.DateTime> Birthday { get; set; }
        public string Description { get; set; }
        public Nullable<bool> ActiveField { get; set; }
        public string Email { get; set; }
        public string Password { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<OwnerCalculationType> OwnerCalculationTypes { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<OwnerPaymentType> OwnerPaymentTypes { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Slot> Slots { get; set; }
    }
}
